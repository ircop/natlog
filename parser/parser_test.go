package parser

import (
	"regexp"
	"testing"
	"time"
)

// 2019-03-13T14:11:49+03:00 nat-100.ip-ho |  099.229.158.175:13001 F 091.245.130.008:01280 I 010.210.025.050:25970   UDP 185.198.112.022:00080 A 091.245.130.058:01225 E 010.210.075.020:48011   TCP 173.249.044.182:36015 F 091.245.129.250:01858 I 010.210.106.001:35642   UDP 145.255.168.014:46844 F 091.245.130.062:01359 E 010.210.060.003:55179   UDP 078.036.184.231:00001 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 085.155.195.053:20287 F 091.245.131.224:01027 I 010.210.146.007:35681   UDP 091.247.002.012:00443 F 091.245.131.149:01220 E 010.210.006.101:54240   UDP 174.055.214.223:06881 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 188.000.102.022:32390 F 091.245.129.130:01450 E 010.210.039.160:65456   TCP 221.163.072.151:55787 A 091.245.131.199:01024 I 010.210.005.086:51093   TCP 178.207.072.252:06882 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 188.000.189.015:35888 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 023.097.150.128:00080 A 091.245.130.048:01055 E 010.210.135.045:41532   TCP 212.096.109.082:06881 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 073.027.195.129:06881 F 091.245.131.248:01281 E 010.210.097.005:49001   UDP 150.095.176.159:06881 A 091.245.131.137:02049 E 010.210.043.021:52585   UDP 084.108.004.166:18653 A 091.245.130.062:01359 I 010.210.060.003:55179   UDP 095.032.234.103:35075 F 091.245.130.028:01029 I 010.216.004.141:43437   UDP
// 2019-03-12T22:01:32+03:00 nat-100.ip-ho |  151.101.246.002:00443 F 091.245.129.236:01049 E 010.010.013.140:50671   TCP 005.189.157.090:02517 A 091.245.129.236:01025 I 010.010.013.140:14567   UDP

var messages = []string {
	"2019-03-13T14:11:49+03:00 nat-100.ip-ho |  099.229.158.175:13001 F 091.245.130.008:01280 I 010.210.025.050:25970   UDP 185.198.112.022:00080 A 091.245.130.058:01225 E 010.210.075.020:48011   TCP 173.249.044.182:36015 F 091.245.129.250:01858 I 010.210.106.001:35642   UDP 145.255.168.014:46844 F 091.245.130.062:01359 E 010.210.060.003:55179   UDP 078.036.184.231:00001 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 085.155.195.053:20287 F 091.245.131.224:01027 I 010.210.146.007:35681   UDP 091.247.002.012:00443 F 091.245.131.149:01220 E 010.210.006.101:54240   UDP 174.055.214.223:06881 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 188.000.102.022:32390 F 091.245.129.130:01450 E 010.210.039.160:65456   TCP 221.163.072.151:55787 A 091.245.131.199:01024 I 010.210.005.086:51093   TCP 178.207.072.252:06882 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 188.000.189.015:35888 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 023.097.150.128:00080 A 091.245.130.048:01055 E 010.210.135.045:41532   TCP 212.096.109.082:06881 A 091.245.129.244:01541 E 010.210.137.013:54473   UDP 073.027.195.129:06881 F 091.245.131.248:01281 E 010.210.097.005:49001   UDP 150.095.176.159:06881 A 091.245.131.137:02049 E 010.210.043.021:52585   UDP 084.108.004.166:18653 A 091.245.130.062:01359 I 010.210.060.003:55179   UDP 095.032.234.103:35075 F 091.245.130.028:01029 I 010.216.004.141:43437   UDP",
	"019-03-12T22:01:32+03:00 nat-100.ip-ho |  151.101.246.002:00443 F 091.245.129.236:01049 E 010.010.013.140:50671   TCP 005.189.157.090:02517 A 091.245.129.236:01025 I 010.010.013.140:14567   UDP",
}

func TestParseFields(t *testing.T) {
	re := regexp.MustCompile(`(?msi:\s+(?P<dstip>\d+.\d+.\d+.\d+):(?P<dstport>\d+)\s+(?P<action>(A|F|E|I))\s+(?P<natip>[^:]+):(?P<natport>\d+))\s+(?P<type>(A|F|E|I))\s+(?P<localip>[^:]+):(?P<localport>\d+)\s+(?P<proto>[a-zA-Z]+)`)

	ts := time.Now()
	records, err := parseFields(&messages[0], re, &ts)
	if err != nil {
		t.Fatalf("Error parsing message #1: %s", err.Error())
	}
	if len(records) != 18 {
		t.Fatalf("message 1: expected 18 records, got %d", len(records))
	}

	records, err = parseFields(&messages[1], re, &ts)
	if err != nil {
		t.Fatalf("Error parsing message #2: %s", err.Error())
	}
	if len(records) != 2 {
		t.Fatalf("message 2: expected 2 records, got %d", len(records))
	}
}
